{"version":3,"sources":["actions/projectAction.js","actions/types.js","components/project/ProjectItem.js","components/project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityAction.js","components/layout/Header.js","components/project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/project/UpdateProject.js","components/projectboard/projecttasks/ProjectTask.js","actions/backlogAction.js","components/projectboard/Backlog.js","components/projectboard/ProjectBoard.js","components/projectboard/projecttasks/AddProjectTask.js","components/projectboard/projecttasks/UpdateProjectTask.js","components/layout/Landing.js","components/usermanagement/Register.js","components/usermanagement/Login.js","securityUtils/secureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","project_CreateProjectButton","map","project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","project_iden","sequence","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","projecttasks_ProjectTask","toDoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","projectboard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newProjectTask","addProjectTask","UpdateProjectTask","created_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decode_jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","layout_Header","exact","path","Switch","secureRoute","Boolean","hostname","ReactDOM","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56649c3c.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//types for backlog\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectAction\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProject }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./project/ProjectItem\";\nimport CreateProjectButton from \"./project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectAction\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // Post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n\n    // Extract token from res.data\n    const { token } = res.data;\n\n    // Store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n\n    // Set our token in header\n    setJWTToken(token);\n\n    // Decode token in react\n    const decoded = jwt_decode(token);\n\n    // Dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityAction\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectAction\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //lifecycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    //this.setState({ projectName: e.target.value }); OLD WAYS\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(newProject, this.props.history);\n    // console.log(newProject);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">\n                  Create / Edit Project form\n                </h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      //onChange={this.onChange.bind(this)} OLD WAYS\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\n/*connect COMPONENT to the STATE*/\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\n//Handling Browser without React and Redux Extention\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware)\n      // ,\n      // window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      //   window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectAction\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project Form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    disabled\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.start_date\n                    })}\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                  {errors.start_date && (\n                    <div className=\"invalid-feedback\">{errors.start_date}</div>\n                  )}\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.end_date\n                    })}\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                  {errors.end_date && (\n                    <div className=\"invalid-feedback\">{errors.end_date}</div>\n                  )}\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogAction\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(project_iden, sequence) {\n    this.props.deleteProjectTask(project_iden, sequence);\n  }\n\n  render() {\n    const { project_task } = this.props;\n\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityString = \"HIGH\";\n      priorityClass = \"bg-danger text-light\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\nimport { async } from \"q\";\n\nexport const addProjectTask = (\n  project_iden,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${project_iden}`, project_task);\n    history.push(`/projectBoard/${project_iden}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = project_iden => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${project_iden}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  project_iden,\n  sequence,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${project_iden}/${sequence}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  project_iden,\n  sequence,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${project_iden}/${sequence}`, project_task);\n    history.push(`/projectBoard/${project_iden}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (project_iden, sequence) => async dispatch => {\n  // if (\n  //   window.confirm(\n  //     `You are deleting Project Task ${sequence}, this action cannot be undone!`\n  //   )\n  // ) {\n  await axios.delete(`/api/backlog/${project_iden}/${sequence}`);\n  dispatch({\n    type: DELETE_PROJECT_TASK,\n    payload: sequence\n  });\n  // }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./projecttasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map(project_tasks => (\n      <ProjectTask key={project_tasks.id} project_task={project_tasks} />\n    ));\n\n    let toDoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        toDoItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {toDoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogAction\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this Board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogAction\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProjectTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n    // console.log(newProjectTask);\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogAction\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nclass UpdateProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      created_At: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { project_iden, sequence } = this.props.match.params;\n    this.props.getProjectTask(project_iden, sequence, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      created_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      created_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      created_At: this.state.created_At\n    };\n\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} + Project Task ID:{\" \"}\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start you own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps, {})(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityAction\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../actions/securityAction\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // When you are loged in you shouldn't login again\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/project/UpdateProject\";\nimport ProjectBoard from \"./components/projectboard/ProjectBoard\";\nimport AddProjectTask from \"./components/projectboard/projecttasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/projectboard/projecttasks/UpdateProjectTask\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/usermanagement/Register\";\nimport Login from \"./components/usermanagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityAction\";\nimport SecuredRoute from \"./securityUtils/secureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decode_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decode_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decode_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            //Public Routes\n          }\n\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n\n          {\n            //Private Routes\n          }\n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:project_iden/:sequence\"\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}